---
---
<div class="md:max-w-2xl mx-auto bg-white px-2 py-8 xs:px-6 md:px-16 md:py-12">
    <h1 class="text-xl lg:text-2xl xl:text-3xl font-bold uppercase font-display italic ">Оплатить заказ</h1>
    <p class="text-sm text-secondary mb-5">
        Пожалуйста, перед оплатой согласуйте сумму с отделом продаж
    </p>
    <form id="paymentForm" class="flex flex-col gap-5">
        <div class="flex flex-col gap-3">
            <input
                    class="form__input form__input--tel"
                    type="tel"
                    name="tel"
                    id="paymentTel"
                    required
                    placeholder="Номер телефона"
            />
            <input
                    class="form__input form__input--name"
                    type="text"
                    name="name"
                    id="paymentName"
                    required
                    placeholder="Ваше ФИО"
            />
            <input
                    class="form__input form__input--email"
                    type="email"
                    name="email"
                    id="paymentEmail"
                    required
                    placeholder="Электронная почта"
            />
            <input
                    class="form__input form__input--value"
                    type="number"
                    step="0.01"
                    name="amount"
                    id="paymentAmount"
                    required
                    placeholder="Сумма оплаты"
            />
        </div>
        <div class="flex flex-col gap-1">
            <button type="submit" class="form__submit text-sm bg-accent text-white flex justify-center items-center h-[60px] min-w-[300px] xl:min-w-[350px] transition hover:shadow-button hover:shadow-accent"
            >Оплатить заказ</button>
            <span class="text-sm text-secondary">Нажимая кнопку вы даете согласие на <a class="text-accent underline" href="/privacy">обработку данных</a><br><a class="text-accent underline" href="/gift">Оказание услуг по контраварийному вождению</a><br><a class="text-accent underline" href="/gift-track">Оказания услуг на гоночном треке</a></span>
        </div>
    </form>
</div>
  <script>
    import Inputmask from "inputmask";
    import toastr from "toastr";

    const nameInput = (document.getElementById('paymentName') as HTMLInputElement);
    const telInput = (document.getElementById('paymentTel') as HTMLInputElement);
    const emailInput = (document.getElementById('paymentEmail') as HTMLInputElement);
    const amountInput = (document.getElementById('paymentAmount') as HTMLInputElement);
    const form = document.getElementById('paymentForm') as HTMLFormElement;
    
    const selector = document.getElementById("paymentTel");

selector.addEventListener('input', function(e) {
    var inputValue = e.target.value;
    var numberPattern = /^\d*$/;
    if (!numberPattern.test(inputValue)) {
        e.target.value = inputValue.replace(/\D/g, '');
    }
    if (inputValue.length > 20) {
        e.target.value = inputValue.slice(0, 20);
    }
});

    interface RegisterPayment {
      // Логин магазина, полученный при подключении. Если вместо аутентификации по логину и паролю используется открытый токен (параметр token), параметр userName передавать не нужно.
      userName: string,
      // Пароль магазина, полученный при подключении. Если для аутентификации при регистрации вместо логина и пароля используется открытый токен (параметр token), параметр password передавать не нужно.
      password: string,
      // Открытый ключ, который можно использовать для регистрации заказа. Если для аутентификации при регистрации заказа используются логин и пароль, параметр token передавать не нужно.
      token: string,
      // Номер (идентификатор) заказа в системе магазина, уникален для каждого магазина в пределах системы.
      orderNumber: string,
      // Сумма платежа в копейках (или центах).
      amount: number,
      // Код валюты платежа ISO 4217. Если не указан, считается равным коду валюты по умолчанию. <br>Тип: N3
      currency: number,
      // Адрес, на который требуется перенаправить пользователя в случае успешной оплаты.
      // Должен быть указан полностью, включая используемый протокол (например, https://test.ru вместо test.ru).
      // В противном случае пользователь будет перенаправлен по адресу следующего вида: http://<адресплатёжногошлюза>/<адрес_продавца>.
      returnUrl: string,
      failUrl: string,
      description,
    }

    export interface RegisterResponse {
        errorCode: string;
        errorMessage: string;
        formUrl: string;
        orderId: string;
    }
    form.onsubmit = async function(e) {
      e.preventDefault();
      if ([nameInput, emailInput, telInput, amountInput].every(input => input?.checkValidity())) {
          const description = `Ф.И.О: ${nameInput.value}, Телефон: ${telInput.value}, E-mail: ${emailInput.value}`
          const backUrl = 'https://ratata.ru/';
          const data = new URLSearchParams();

          data.append('orderNumber', `${(new Date()).getTime()}`);
          data.append('description', description);
          data.append('returnUrl', `${backUrl}#payment_success`);
          data.append('failUrl', `${backUrl}#payment_error`);
          data.append('email', emailInput.value);
          data.append('amount', `${+amountInput.value}`);
          data.append('source', 'ratata');
          const response = await fetch('https://autopragmat.ru/api/v2/send-pay/', {
          method: 'POST',
          body: data,
          })
          if (!response.ok) {
            return;
          }
          let result: RegisterResponse = await response.json();
          if (result.errorCode || result.errorMessage) {
            toastr.error(result.errorMessage);
            return;
          }
          window.location.href = result.formUrl;

    }
    };
  </script>
